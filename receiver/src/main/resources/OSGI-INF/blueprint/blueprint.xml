<?xml version="1.0" encoding="UTF-8"?>
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
       http://www.osgi.org/xmlns/blueprint/v1.0.0 http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd
       http://camel.apache.org/schema/blueprint http://camel.apache.org/schema/blueprint/camel-blueprint.xsd">

		<bean id="activemq" class="org.apache.activemq.camel.component.ActiveMQComponent" >
	        <property name="connectionFactory">
	          <bean class="org.apache.activemq.ActiveMQConnectionFactory">
	            <property name="brokerURL" value="vm://localhost?create=false&amp;waitForStart=10000" />
	            <property name="userName" value="admin"/>
	            <property name="password" value="admin"/>
	          </bean>
	        </property>
	    </bean>

    	
 		<bean id="datasource" class="org.apache.commons.dbcp.BasicDataSource">
	        <property name="driverClassName" value="org.postgresql.Driver" />
	        <property name="url" value="jdbc:postgresql://postgres:5432/demo" />
	        <property name="username" value="psteiner" />
	        <property name="password" value="change12_me" />
	        <property name="initialSize" value="10" />
	        <property name="maxActive" value="5" />
	        <property name="defaultAutoCommit" value="false" />
	    </bean>
	   
	    <bean id="dataToSQL" class="com.redhat.demo.iot.datacenter.receiver.DataToSQLBean">
	    </bean>
	  
	  <camelContext xmlns="http://camel.apache.org/schema/blueprint">
  <route id="datacenter_receive">
    <from uri="activemq:queue:message.to.datacenter"/>
    <multicast>
      <to uri="direct:Monitoring"/>
      <to uri="direct:filtering"/>
    </multicast>
  </route>

  <route id="Filtering">
    <from uri="direct:filtering"/>
  
 	<unmarshal>
     	<jaxb contextPath="com.redhat.demo.iot.datacenter.receiver"/>
   	</unmarshal>
  		
  	<choice>
  		<when>
  			<simple>${body.deviceType} == 'temperature'</simple>
  			<to uri="direct:handleTemperature"/> 
  		</when>
  		<when>
  			<simple>${body.deviceType} == 'humidity'</simple>
  			<to uri="direct:handleHumidity"/> 
  		</when>
  		<when>
  			<simple>${body.deviceType} == 'voltage'</simple>
  			<to uri="direct:handleVoltage"/> 
  		</when>
 	</choice>
     
  </route>
  
  <route id="Temperature">
    <from uri="direct:handleTemperature"/>
    <log message="In Temperature"/>
    <to uri="bean:dataToSQL?method=toSql(${body},'temperature')"/>
    <to uri="jdbc:datasource"/>   
  </route>

   <route id="Humidity">
    <from uri="direct:handleHumidity"/>
    <log message="In Humidity"/>
    <to uri="bean:dataToSQL?method=toSql(${body},'humidity')"/>
    <to uri="jdbc:datasource"/>   
  </route>

 <route id="Voltage">
    <from uri="direct:handleVoltage"/>
    <log message="In Voltage"/>
    <to uri="bean:dataToSQL?method=toSql(${body},'voltage')"/>
    <to uri="jdbc:datasource"/>   
  </route>

  <route id="Monitoring">
    <from uri="direct:Monitoring"/>
    <log message="Message will be send to monitor"/>
    <to uri="activemq:queue:message.to.monitor"/>
  </route>
   

</camelContext>

</blueprint>
